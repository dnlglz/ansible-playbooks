!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
'	roles/vim/files/vimrc	/^map ' `$/;"	m
,<space>	roles/vim/files/vimrc	/^nmap <silent> ,<space> :nohlsearch<CR>$/;"	m
<C-H>	roles/vim/files/vimrc	/^nnoremap <C-H> <C-W><C-H>$/;"	m
<C-J>	roles/vim/files/vimrc	/^nnoremap <C-J> <C-W><C-J>$/;"	m
<C-K>	roles/vim/files/vimrc	/^nnoremap <C-K> <C-W><C-K>$/;"	m
<C-L>	roles/vim/files/vimrc	/^nnoremap <C-L> <C-W><C-L>$/;"	m
<C-S-F1>	roles/vim/files/gvimrc	/^nnoremap <silent> <C-S-F1> :if &go=~#'m'<Bar>set go-=m<Bar>else<Bar>set go+=m<Bar>endif<CR>$/;"	m
<C-S-F2>	roles/vim/files/gvimrc	/^nnoremap <silent> <C-S-F2> :if &go=~#'T'<Bar>set go-=T<Bar>else<Bar>set go+=T<Bar>endif<CR>$/;"	m
<C-S-F3>	roles/vim/files/gvimrc	/^nnoremap <silent> <C-S-F3> :if &go=~#'r'<Bar>set go-=r<Bar>else<Bar>set go+=r<Bar>endif<CR>$/;"	m
<C-j>	roles/vim/files/vimrc	/^nmap <silent> <C-j> <Plug>(ale_next_wrap)$/;"	m
<C-k>	roles/vim/files/vimrc	/^nmap <silent> <C-k> <Plug>(ale_previous_wrap)$/;"	m
<F3>	roles/vim/files/vimrc	/^nmap <silent> <F3> :Lex<CR>$/;"	m
<F5>	roles/vim/files/vimrc	/^nmap <silent> <F5> :!ctags -R -f .tags .<CR>$/;"	m
<Leader>a	roles/vim/files/vimrc	/^map <Leader>a :Ag<CR>$/;"	m
<Leader>b	roles/vim/files/vimrc	/^map <Leader>b :Buffers<CR>$/;"	m
<Leader>f	roles/vim/files/vimrc	/^map <Leader>f :Files<CR>$/;"	m
<Leader>h	roles/vim/files/vimrc	/^map <Leader>h <Plug>(easymotion-linebackward)$/;"	m
<Leader>j	roles/vim/files/vimrc	/^map <Leader>j <Plug>(easymotion-j)$/;"	m
<Leader>k	roles/vim/files/vimrc	/^map <Leader>k <Plug>(easymotion-k)$/;"	m
<Leader>l	roles/vim/files/vimrc	/^map <Leader>l <Plug>(easymotion-lineforward)$/;"	m
<Leader>m	roles/vim/files/vimrc	/^map <Leader>m :Marks<CR>$/;"	m
<Leader>t	roles/vim/files/vimrc	/^map <Leader>t :Tags<CR>$/;"	m
<c-c>	roles/vim/files/vimrc	/^inoremap <c-c> <Esc>$/;"	m
<c-l>	roles/vim/files/vimrc	/^nnoremap <silent> <c-l> :SlimeSend1 <cr>$/;"	m
<leader>e	roles/vim/files/vimrc	/^map <leader>e :e $MYVIMRC<CR>$/;"	m
<space>	roles/vim/files/vimrc	/^map <space> <Plug>(easymotion-sn)$/;"	m
<space>	roles/vim/files/vimrc	/^omap <space> <Plug>(easymotion-tn)$/;"	m
@	roles/vim/files/vimrc	/^nnoremap @ Q$/;"	m
Activate undistract-me	roles/utils/tasks/main.yml	/^- name: Activate undistract-me$/;"	p
Add cc alias	roles/personal/tasks/main.yml	/^- name: Add cc alias$/;"	p
Add current user to docker group	roles/docker/tasks/main.yml	/^- name: Add current user to docker group$/;"	p
Add tmuxp autocomplete	roles/personal/tasks/main.yml	/^- name: Add tmuxp autocomplete$/;"	p
All roles	site.yml	/^- name: All roles$/;"	p
Copy config files	roles/vim/tasks/main.yml	/^- name: Copy config files$/;"	p
Create ansible log file	roles/utils/tasks/main.yml	/^- name: Create ansible log file$/;"	p
Create or attach to tmux session	roles/personal/tasks/main.yml	/^- name: Create or attach to tmux session$/;"	p
Dump all vars	roles/debug/tasks/main.yml	/^- name: Dump all vars$/;"	p
Ensure .vim folder	roles/vim/tasks/main.yml	/^- name: Ensure .vim folder$/;"	p
Ensure .vim plugin folder	roles/vim/tasks/main.yml	/^- name: Ensure .vim plugin folder$/;"	p
Ensure base software is installed	roles/arch/tasks/main.yml	/^- name: Ensure base software is installed$/;"	p
Ensure ptpython folder exists	roles/python/tasks/main.yml	/^- name: Ensure ptpython folder exists$/;"	p
Ensure repos directory exists	roles/system/tasks/main.yml	/^- name: Ensure repos directory exists$/;"	p
Ensure ~/.pip directory exists	roles/personal/tasks/main.yml	/^- name: Ensure ~\/.pip directory exists$/;"	p
Install audio packages	roles/audio/tasks/main.yml	/^- name: Install audio packages$/;"	p
Install docker packages for arch family	roles/docker/tasks/main.yml	/^- name: Install docker packages for arch family$/;"	p
Install docker packages for debian family	roles/docker/tasks/main.yml	/^- name: Install docker packages for debian family$/;"	p
Install fun packages	roles/fun/tasks/main.yml	/^- name: Install fun packages$/;"	p
Install fzf	roles/vim/tasks/main.yml	/^- name: Install fzf$/;"	p
Install guake	roles/personal/tasks/main.yml	/^- name: Install guake$/;"	p
Install image packages	roles/image/tasks/main.yml	/^- name: Install image packages$/;"	p
Install ppas	roles/video/tasks/main.yml	/^- name: Install ppas$/;"	p
Install python packages via apt	roles/python/tasks/main.yml	/^- name: Install python packages via apt$/;"	p
Install python packages via pip in debian family	roles/python/tasks/main.yml	/^- name: Install python packages via pip in debian family$/;"	p
Install scripts	roles/utils/tasks/main.yml	/^- name: Install scripts$/;"	p
Install scripts	roles/video/tasks/main.yml	/^- name: Install scripts$/;"	p
Install util packages	roles/utils/tasks/main.yml	/^- name: Install util packages$/;"	p
Install util packages for arch family	roles/utils/tasks/main.yml	/^- name: Install util packages for arch family$/;"	p
Install util packages for debian family	roles/utils/tasks/main.yml	/^- name: Install util packages for debian family$/;"	p
Install video packages	roles/video/tasks/main.yml	/^- name: Install video packages$/;"	p
Install/update plugins	roles/vim/tasks/main.yml	/^- name: Install\/update plugins$/;"	p
Intall fzf repo	roles/vim/tasks/main.yml	/^- name: Intall fzf repo$/;"	p
Link config tmux file	roles/tmux/tasks/main.yml	/^- name: Link config tmux file$/;"	p
Link pip.conf	roles/personal/tasks/main.yml	/^- name: Link pip.conf$/;"	p
M-N	roles/vim/files/vimrc	/^map M-N <Plug>(easymotion-prev)$/;"	m
M-n	roles/vim/files/vimrc	/^map M-n <Plug>(easymotion-next)$/;"	m
Prettier log	roles/personal/tasks/main.yml	/^- name: Prettier log$/;"	p
Ptipython config file	roles/python/tasks/main.yml	/^- name: Ptipython config file$/;"	p
Purge python packages via apt	roles/python/tasks/main.yml	/^- name: Purge python packages via apt$/;"	p
Q	roles/vim/files/vimrc	/^nnoremap Q @$/;"	m
Remove old configuration	roles/vim/tasks/main.yml	/^- name: Remove old configuration$/;"	p
Remove packages	roles/clear/tasks/main.yml	/^- name: Remove packages$/;"	p
Remove pencil folder	roles/image/tasks/main.yml	/^- name: Remove pencil folder$/;"	p
Remove pencil link	roles/image/tasks/main.yml	/^- name: Remove pencil link$/;"	p
Remove pulverize link	roles/video/tasks/main.yml	/^- name: Remove pulverize link$/;"	p
Remove pulverize repo	roles/video/tasks/main.yml	/^- name: Remove pulverize repo$/;"	p
Remove python packages via pip in debian family	roles/python/tasks/main.yml	/^- name: Remove python packages via pip in debian family$/;"	p
Remove screenfetch	roles/personal/tasks/main.yml	/^- name: Remove screenfetch$/;"	p
Remove sonya obs wrong repo	roles/video/tasks/main.yml	/^- name: Remove sonya obs wrong repo$/;"	p
Remove sylvia obs wrong repo	roles/video/tasks/main.yml	/^- name: Remove sylvia obs wrong repo$/;"	p
Remove unused plugins	roles/vim/tasks/main.yml	/^- name: Remove unused plugins$/;"	p
RemoveTrailingWSOnWrite	roles/vim/files/vimrc	/^augroup RemoveTrailingWSOnWrite$/;"	a
Set autocd in bashrc	roles/personal/tasks/main.yml	/^- name: Set autocd in bashrc$/;"	p
Set git color ui	roles/personal/tasks/main.yml	/^- name: Set git color ui$/;"	p
Set git default editor	roles/personal/tasks/main.yml	/^- name: Set git default editor$/;"	p
Set git default push	roles/personal/tasks/main.yml	/^- name: Set git default push$/;"	p
Set git email	roles/personal/tasks/main.yml	/^- name: Set git email$/;"	p
Set git name	roles/personal/tasks/main.yml	/^- name: Set git name$/;"	p
Set up ansible debug mode	roles/utils/tasks/main.yml	/^- name: Set up ansible debug mode$/;"	p
Set up ansible logging	roles/utils/tasks/main.yml	/^- name: Set up ansible logging$/;"	p
Set vim as default editor	roles/personal/tasks/main.yml	/^- name: Set vim as default editor$/;"	p
Update arch family system	roles/system/tasks/main.yml	/^- name: Update arch family system$/;"	p
Update debian family system	roles/system/tasks/main.yml	/^- name: Update debian family system$/;"	p
ansible-playbooks	README.md	/^# ansible-playbooks$/;"	c
format	roles/personal/files/pip.conf	/^format=columns$/;"	k	section:list
g:AutoPairsShortcutFastWrap	roles/vim/files/vimrc	/^let g:AutoPairsShortcutFastWrap = '<C-e>'$/;"	v
g:AutoPairsShortcutToggle	roles/vim/files/vimrc	/^let g:AutoPairsShortcutToggle = '<C-h>'$/;"	v
g:EasyMotion_startofline	roles/vim/files/vimrc	/^let g:EasyMotion_startofline = 0 " keep cursor colum when JK motion$/;"	v
g:UltiSnipsExpandTrigger	roles/vim/files/vimrc	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	roles/vim/files/vimrc	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	roles/vim/files/vimrc	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:deoplete#enable_at_startup	roles/vim/files/vimrc	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:netrw_banner	roles/vim/files/vimrc	/^let g:netrw_banner=0$/;"	v
g:netrw_liststyle	roles/vim/files/vimrc	/^let g:netrw_liststyle=3$/;"	v
g:slime_python_ipython	roles/vim/files/vimrc	/^let g:slime_python_ipython = 1$/;"	v
g:slime_target	roles/vim/files/vimrc	/^let g:slime_target = "tmux"$/;"	v
g:solarized_contrast	roles/vim/files/vimrc	/^let g:solarized_contrast="high"$/;"	v
g:solarized_termcolors	roles/vim/files/vimrc	/^let g:solarized_termcolors=256$/;"	v
g:solarized_visibility	roles/vim/files/vimrc	/^let g:solarized_visibility="low"$/;"	v
html_use_css	roles/vim/files/vimrc	/^let html_use_css=1$/;"	v
list	roles/personal/files/pip.conf	/^[list]$/;"	s
mapleader	roles/vim/files/vimrc	/^let mapleader=","$/;"	v
